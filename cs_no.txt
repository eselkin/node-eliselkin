Computer science study theory  experimentation  engineering form basis design use computers  scientific practical approach computation its applications systematic study feasibility  structure  expression  mechanization methodical procedures  algorithms  underlie acquisition  representation  processing  storage  communication  access information  alternate  succinct definition computer science study automating algorithmic processes scale  computer scientist specializes theory computation design computational systems  Its fields divided variety theoretical practical disciplines  fields  computational complexity theory  explores fundamental properties computational intractable problems   highly abstract  fields computer graphics emphasize real world visual applications  fields focus challenges implementing computation  example  programming language theory considers various approaches description computation  study computer programming itself investigates various aspects use programming language complex systems  Human computer interaction considers challenges making computers computations useful  usable  universally accessible humans  Artificial intelligence  AI  aims required synthesize goal orientated processes problem solving  decision making  environmental adaptation  learning communication found humans animals  its origins cybernetics Dartmouth Conference         artificial intelligence research necessarily cross disciplinary  drawing areas expertise applied mathematics  symbolic logic  semiotics  electrical engineering  philosophy mind  neurophysiology  social intelligence  AI associated popular mind robotic development  main field practical application embedded component areas software development  require computational understanding  starting point late     s Alan Turing s question  computers think    question remains effectively unanswered although Turing test used assess computer output scale human intelligence  automation evaluative predictive tasks increasingly successful substitute human monitoring intervention domains computer application involving complex real world data  Computational science  scientific computing  field study concerned constructing mathematical models quantitative analysis techniques using computers analyze solve scientific problems  practical use  typically application computer simulation forms computation problems various scientific disciplines  Software engineering study designing  implementing  modifying software order ensure high quality  affordable  maintainable  fast build  systematic approach software design  involving application engineering practices software  Software engineering deals organizing analyzing software doesn t just deal creation manufacture new software  its internal maintenance arrangement  computer applications software engineers computer systems software engineers projected among fastest growing occupations            Data Structures programmatic storing data so data used efficiently  Almost every enterprise application uses various types data structures one  tutorial will give great understanding Data Structures needed understand complexity enterprise level applications need algorithms  data structures  programming language formal language specifies set instructions used produce various kinds output  Programming languages generally consist instructions computer  Programming languages used create programs implement specific algorithms  earliest known programmable machine preceded invention digital computer automatic flute player described  th century brothers Musa Baghdad  during Islamic Golden Age  early     s   programs  used direct behavior machines Jacquard looms player pianos Thousands different programming languages created  mainly computer field  created every year  programming languages require computation specified imperative form  e   sequence operations perform  languages use forms program specification declarative form  e  desired result specified  not achieve   description programming language usually split two components syntax  form  semantics  meaning   languages defined specification document  example  C programming language specified ISO Standard  languages  Perl  dominant implementation treated reference  languages  basic language defined standard extensions taken dominant implementation common  Programming languages share properties natural languages related purpose vehicles communication  having syntactic form separate its semantics  showing language families related languages branching one artificial constructs  differ fundamental ways languages evolved usage  significant difference programming language fully described studied its entirety  precise finite definition contrast  natural languages changing meanings given users different communities  constructed languages artificial languages designed ground specific purpose  lack precise complete semantic definition programming language  programming languages designed scratch  altered meet new needs  combined languages  eventually fallen disuse  Although attempts design one  universal  programming language serves purposes  failed generally accepted filling role need diverse programming languages arises diversity contexts languages used  Programs range tiny scripts written individual hobbyists huge systems written hundreds programmers  Programmers range expertise novices need simplicity above else  experts may comfortable considerable complexity  Programs balance speed  size  simplicity systems ranging microcontrollers supercomputers  Programs may written once not change generations  may undergo continual modification  Programmers may simply differ tastes  may accustomed discussing problems expressing particular language  One common trend development programming languages add ability solve problems using higher level abstraction  earliest programming languages tied closely underlying hardware computer  new programming languages developed  features added let programmers express ideas remote simple translation underlying hardware instructions  programmers less tied complexity computer  programs computing less effort programmer  lets write functionality per time unit  Natural language programming proposed eliminate need specialized language programming  However  goal remains distant its benefits open debate  Edsger W  Dijkstra took position use formal language essential prevent introduction meaningless constructs  dismissed natural language programming  foolish  Alan Perlis similarly dismissive idea  Hybrid approaches taken Structured English SQL  language s designers users construct number artifacts govern enable practice programming  important artifacts language specification implementation  C C   Java JavaScript Python CUDA Keras tensorflow SQL docker containers container google_compute_platform GCP Amazon_Web_services AWS React react native android swift iOS frameworks Angular Angular_  angular   Computer Science study computers computational systems  Unlike electrical computer engineers  computer scientists deal mostly software software systems  includes theory  design  development  application  Principal areas study within Computer Science include artificial intelligence  computer systems networks  security  database systems  human computer interaction  vision graphics  numerical analysis  programming languages  software engineering  bioinformatics theory computing  Although knowing program essential study computer science  one element field  Computer scientists design analyze algorithms solve programs study performance computer hardware software  problems computer scientists encounter range abstract   determining problems solved computers complexity algorithms solve   tangible   designing applications perform handheld devices  easy use  uphold security measures  Computer science discipline spans theory practice  requires thinking abstract terms concrete terms  practical side computing seen everywhere  Nowadays  practically everyone computer user  people even computer programmers  Getting computers want requires intensive hands experience  computer science seen higher level  science problem solving  Computer scientists adept modeling analyzing problems  able design solutions verify correct  Problem solving requires precision  creativity  careful reasoning  Computer science strong connections disciplines  problems science  engineering  health care  business  areas solved effectively computers  finding solution requires computer science expertise knowledge particular application domain  Thus  computer scientists often become proficient subjects  Finally  computer science wide range specialties  include computer architecture  software systems  graphics  artifical intelligence  computational science  software engineering  Drawing common core computer science knowledge  specialty area focuses particular challenges  Computer Science practiced mathematicians  scientists engineers  Mathematics  origins Computer Science  provides reason logic  Science provides methodology learning refinement  Engineering provides techniques building hardware software  Computer science discipline involves understanding design computers computational processes  its general form concerned understanding information transfer transformation  Particular interest placed making processes efficient endowing form intelligence  discipline ranges theoretical studies algorithms practical problems implementation terms computational hardware software  central focus processes handling manipulating information  Thus  discipline spans advancing fundamental understanding algorithms information processes general practical design efficient reliable software hardware meet given specifications  Computer science young discipline evolving rapidly its beginnings      s  includes theoretical studies  experimental methods  engineering design one discipline  differs radically physical sciences separate understanding advancement science applications science fields engineering design implementation  computer science inherent intermingling theoretical concepts computability algorithmic efficiency modern practical advancements electronics continue stimulate advances discipline  close interaction theoretical design aspects field binds together single discipline  rapid evolution difficult provide complete list computer science areas  Yet clear crucial areas theory  algorithms data structures  programming methodology languages  computer elements architecture  areas include software engineering  artificial intelligence  computer networking communication  database systems  parallel computation  distributed computation  computer human interaction  computer graphics  operating systems  numerical symbolic computation  professional computer scientist firm foundation crucial areas field will likely depth knowledge one areas discipline  depending upon person s particular area practice  Thus  educated computer scientist able apply fundamental concepts techniques computation  algorithms  computer design specific design problem  work includes detailing specifications  analysis problem  provides design functions desired  satisfactory performance  reliable maintainable  meets desired cost criteria  Clearly  computer scientist not sufficient training computer science areas able accomplish tasks  firm understanding areas mathematics science  broad education liberal studies provide basis understanding societal implications work performed  Operating Systems  concerned development structure complex programs facilitate man machine communications  Computational Science  analysis numerical methods solving mathematical problems computer  Programming Languages  study design properties languages humans communicate computers  Architecture  study use mathematical logic design electronic circuits  Intelligent Systems  concerned means computers may perform tasks characterized  intelligent  performed humans  Automata Theory  abstract study computers capabilities  Information Storage Retrieval  study methods storing vast amount data computer methods searching retrieving data  Software Engineering  study tools techniques software design  development  testing maintenance  view science look methods used within science  sense methods similar    sciences  different characteristics discipline  Four important methods used study computer science  invention     formulation new algorithmic new architectural paradigms design     software engineering uses design principles build complex systems solve computational problems analysis     certainly major focus within computer science analysis evaluation software  algorithms architecture  experimentation     use experiments reveal computing principles important method scientific investigation within computer science  Artificial intelligence  scientific computation  educational computing  societal legal frameworks information technology   Computer architecture software systems  multicore architecture  multicore operating systems  self aware computing  VLSI processors  compilations runtime technologies parallel computing  Computer networks systems  programmable networks  learning based networked systems  datacenter networks  cloud computing  modeling analysis computer systems  Domain specific languages  program analysis optimizing compilers  Performance engineering high performance computing   Computer architecture  Architecture synthesis verification  digital design  term rewriting systems lambda calculus    Parallel architectures programming languages  Networked systems  mobile sensor computing  network architecture protocols  scalable distributed systems  data management   Operating systems  networking  computer architecture  datacenter performance  Algorithms software computational biology  large scale genomics  computational structural biology  network inference  population genetics  medical genomics  Natural language processing   computer models language acquisition parsing  Computational biology evolutionary theory including evolution language  Artificial intelligence   formal models learning  including inductive inference computational complexity analysis language  Cognitive science  word learning  semantics natural languages   Statistics computation  theoretical machine learning  applied probability  Algorithms performance limits statistical inference decision making large scale systems  Design implementation programming systems  including languages  program logics  program analysis verification systems  runtime systems   Particular interest programming systems emerging probabilistic approximate computing fabrics  Networked systems applications social economic networks  transportation networks  power grid  Specific focus development foundational theory necessary understand  monitor  control systemic risk interconnected systems   Model reduction stochastic systems  hybrid control   interface system theory neuroscience application motor control   Development integral equation solvers large systems  stochastic field solvers large number uncertainties  automatic generation parametrized stable compact models linear nonlinear dynamical systems  Simulation  modeling optimization mixed signai RF mm  wave circuits  power electronics  MEMs  nanotechnologies  materials  MRI  human cardiovascular system   Leave Spring Term  Spatial computing architectures  processor performance modeling infrastructures  especially FPGA  accelerated simulation  parallel multi  threaded processor architecture  cache memory hierarchy design  processor reliability analysis  Quantum technologies secure communications  computation  precision measurements  electro optic devices new forms computing  Current focus areas include photonic integrated circuits quantum secure communications neural network computing  quantum repeaters modular quantum computers  quantum enhanced sensors  quantum devices based  D materials  Machine learning methods algorithms therapeutic design  genomics  genetics  experimental design  Machine learning  Systems biology  Entrepreneurship   Computer  vision   medical  image  analysis   medical  image  processing  image guided surgery  activity recognition  Application machine learning data mining techniques large data sets  especially medical data sets  Application computer vision medicine  Sports analytics  Large scale systems modeling simulation  power systems control pricing algorithms  critical infrastructures interdependencies  smart grids  microgrids Theory algorithms analysis design hybrid systems  nonlinear robust control  non convex convex optimization  formalization knowledge education  functional analysis operator theory  Human computer interaction  online education  crowd computing  social computing  programming systems  software engineering  Optimization theory algorithms focus algorithms machine learning large scale data processing distributed parallel computation  Game theory mechanism design Modeling  analysis optimization multi agent networked systems  applications infrastructure systems  communication networks  traffic networks power grid  social  economic financial systems  Information theory  coding theory  error correcting codes Hamming spaces  asymptotic combinatorics  fault tolerant defect tolerant circuits  Computer architecture  particular  striving improve performance  efficiency scalability future parallel heterogeneous systems  enable programmers leverage full capabilities easily  Current projects focus scalable efficient memory hierarchies  architectures quality service guarantees  scalable dynamic fine grained runtimes schedulers  hardware support scheduling   Does Internet Work   Introduction Begin  Internet Addresses Protocol Stacks Packets Networking Infrastructure Internet Infrastructure Internet Routing Hierarchy Domain Names Address Resolution Internet Protocols Revisited Application Protocols  HTTP World Wide Web Application Protocols  SMTP Electronic Mail Transmission Control Protocol Internet Protocol Wrap Resources Bibliography Introduction  does Internet work  Good question  Internet s growth become explosive seems impossible escape bombardment www com s seen constantly television  heard radio  seen magazines  Internet become large part lives  good understanding needed use new tool effectively  whitepaper explains underlying infrastructure technologies Internet work  does not go great depth  covers enough area give basic understanding concepts involved  unanswered questions  list resources provided end paper  comments  suggestions  questions  etc  encouraged may directed author rshuler gobcg com   Begin  Internet Addresses  Internet global network computers computer connected Internet unique address  Internet addresses form nnn nnn nnn nnn nnn number          address known IP address   IP stands Internet Protocol  later   picture below illustrates two computers connected Internet  computer IP address         computer IP address          Internet represented abstract object   paper progresses  Internet portion Diagram   will explained redrawn several times details Internet exposed    connect Internet Internet Service Provider  ISP   usually assigned temporary IP address duration dial session  connect Internet local area network  LAN  computer permanent IP address obtain temporary one DHCP  Dynamic Host Configuration Protocol  server  case  connected Internet  computer unique IP address  Check   Ping Program re using Microsoft Windows flavor Unix connection Internet  handy program computer Internet alive  s called ping  probably sound made older submarine sonar systems   using Windows  start command prompt window  re using flavor Unix  command prompt  Type ping www yahoo com  ping program will send  ping   actually ICMP  Internet Control Message Protocol  echo request message  named computer  pinged computer will respond reply  ping program will count time expired until reply comes back  does    enter domain name  e  www yahoo com  instead IP address  ping will resolve domain name display computer s IP address  domain names address resolution later  Protocol Stacks Packets  So computer connected Internet unique address  does  talk  computers connected Internet  example serve  Let s say IP address         want send message computer          message want send  Hello computer            Obviously  message transmitted whatever kind wire connects computer Internet  Let s say ve dialed ISP home message transmitted phone line  Therefore message translated alphabetic text electronic signals  transmitted Internet  translated back alphabetic text  accomplished  use protocol stack  Every computer needs one communicate Internet usually built computer s operating system  e  Windows  Unix  etc    protocol stack used Internet refered TCP IP protocol stack two major communication protocols used  TCP IP stack looks     Protocol Layer Comments Application Protocols Layer Protocols specific applications WWW  e mail  FTP  etc  Transmission Control Protocol Layer TCP directs packets specific application computer using port number  Internet Protocol Layer IP directs packets specific computer using IP address  Hardware Layer Converts binary packet data network signals back   E g  ethernet network card  modem phone lines  etc     follow path message  Hello computer           took computer computer IP address          happen something    message start top protocol stack computer work s downward  message sent long  stack layer message passes may break message smaller chunks data  data sent Internet  computer networks  sent manageable chunks  Internet  chunks data known packets  packets go Application Layer continue TCP layer  packet assigned port number  Ports will explained later  suffice say programs may using TCP IP stack sending messages  need know program destination computer needs receive message will listening specific port  going TCP layer  packets proceed IP layer  packet receives s destination address           message packets port number IP address  ready sent Internet  hardware layer takes care turning packets containing alphabetic text message electronic signals transmitting phone line  end phone line ISP direct connection Internet  ISPs router examines destination address packet determines send  Often  packet s next stop router  routers Internet infrastructure later  Eventually  packets reach computer           packets start bottom destination computer s TCP IP stack work upwards  packets go upwards stack  routing data sending computer s stack added  IP address port number  stripped packets  When data reaches top stack  packets re assembled original form   Hello computer           Networking Infrastructure  So know packets travel one computer Internet  s  actually makes Internet  Let s look diagram   Diagram   redrawn detail  physical connection phone network Internet Service Provider easy guess  beyond bear explanation  ISP maintains pool modems dial customers  managed form computer  usually dedicated one  controls data flow modem pool backbone dedicated line router  setup may refered port server   serves  access network  Billing usage information usually collected  packets traverse phone network ISP s local equipment  routed onto ISP s backbone backbone ISP buys bandwidth  packets will usually journey several routers several backbones  dedicated lines  networks until find destination  computer address          wouldn t nice knew exact route packets taking Internet  turns     Check   Traceroute Program re using Microsoft Windows flavor Unix connection Internet  handy Internet program  one called traceroute shows path packets taking given Internet destination  ping  use traceroute command prompt  Windows  use tracert www yahoo com  Unix prompt  type traceroute www yahoo com  ping  may enter IP addresses instead domain names  Traceroute will print list routers  computers  Internet entities packets travel destination  use traceroute  ll notice packets travel things destination  long names sjc  core  h      atlas digex net fddi    br  SJC globalcenter net  Internet routers decide send packets  Several routers shown Diagram    few  Diagram   meant show simple network structure  Internet complex  Internet backbone made large networks interconnect  large networks known Network Service Providers NSPs  large NSPs UUNet  CerfNet  IBM  BBN Planet  SprintNet  PSINet  others  networks peer exchange packet traffic  NSP required connect three Network Access Points NAPs  NAPs  packet traffic may jump one NSP s backbone NSP s backbone  NSPs interconnect Metropolitan Area Exchanges MAEs  MAEs serve purpose NAPs privately owned  NAPs original Internet interconnect points  NAPs MAEs referred Internet Exchange Points IXs  NSPs sell bandwidth smaller networks  ISPs smaller bandwidth providers  Below picture showing hierarchical infrastructure   not true representation actual piece Internet  Diagram   meant demonstrate NSPs interconnect smaller ISPs  None physical network components shown Diagram   Diagram    single NSP s backbone infrastructure complex drawing itself  NSPs publish maps network infrastructure web sites found easily  draw actual map Internet nearly impossible due s size  complexity  ever changing structure  So packets find across Internet  Does every computer connected Internet know computers  packets simply  broadcast  every computer Internet  answer preceeding questions  no   No computer knows computers  packets not sent every computer  information used packets destinations contained routing tables kept router connected Internet  Routers packet switches  router usually connected networks route packets  router knows s sub networks IP addresses use  router usually doesn t know IP addresses  above   Examine Diagram   below  black boxes connecting backbones routers  larger NSP backbones top connected NAP  several sub networks   sub networks  bottom two local area networks computers attached   When packet arrives router  router examines IP address put IP protocol layer originating computer  router checks s routing table  network containing IP address found  packet sent network  network containing IP address not found  router sends packet default route  usually backbone hierarchy next router  Hopefully next router will know send packet  does not  again packet routed upwards until reaches NSP backbone  routers connected NSP backbones hold largest routing tables packet will routed correct backbone  will begin its journey  downward  smaller smaller networks until finds s destination  Domain Names Address Resolution don t know IP address computer want connect  need access web server referred www anothercomputer com  does web browser know Internet computer lives  answer questions Domain Name Service DNS  DNS distributed database keeps track computer s names corresponding IP addresses Internet  computers connected Internet host part DNS database software allows others access  computers known DNS servers  No DNS server contains entire database  contain subset  DNS server does not contain domain name requested computer  DNS server re directs requesting computer DNS server   Domain Name Service structured hierarchy similar IP routing hierarchy  computer requesting name resolution will re directed   hierarchy until DNS server found resolve domain name request  Figure   illustrates portion hierarchy  top tree domain roots  older  common domains seen near top  not shown multitude DNS servers around world form rest hierarchy  When Internet connection setup  e g  LAN Dial Networking Windows   one primary one secondary DNS servers usually specified part installation   Internet applications need domain name resolution will able function correctly  example  when enter web address web browser  browser first connects primary DNS server  obtaining IP address domain name entered  browser connects target computer requests web page wanted  Check   Disable DNS Windows re using Windows    NT access Internet  may view DNS server s  even disable  use Dial Networking   Open Dial Networking window  found Windows Explorer CD ROM drive above Network Neighborhood   Right click Internet connection click Properties  Near bottom connection properties window press TCP IP Settings    button  permanent connection Internet   Right click Network Neighborhood click Properties  Click TCP IP Properties  Select DNS Configuration tab top   looking DNS servers  IP addresses  may disable DNS set DNS servers           Write down DNS servers  IP addresses first  will probably restart Windows   enter address web browser  browser won t able resolve domain name will probably nasty dialog box explaining DNS server couldn t found  However  enter corresponding IP address instead domain name  browser will able retrieve desired web page   Use ping IP address prior disabling DNS   Microsoft operating systems similar     Internet Protocols Revisited  hinted earlier section protocol stacks  one may surmise protocols used Internet  true  communication protocols required Internet function  include TCP IP protocols  routing protocols  medium access control protocols  application level protocols  etc  following sections describe important commonly used protocols Internet  Higher level protocols discussed first  followed lower level protocols  Application Protocols  HTTP World Wide Web  One commonly used services Internet World Wide Web  WWW   application protocol makes web work Hypertext Transfer Protocol HTTP  not confuse Hypertext Markup Language  HTML   HTML language used write web pages  HTTP protocol web browsers web servers use communicate Internet  application level protocol sits top TCP layer protocol stack used specific applications talk one  case applications web browsers web servers  HTTP connectionless text based protocol  Clients  web browsers  send requests web servers web elements web pages images  request serviced server  connection client server across Internet disconnected  new connection made request  protocols connection oriented  means two computers communicating keep connection open Internet  HTTP does not however  HTTP request made client  new connection made server   When type URL web browser  happens   URL contains domain name  browser first connects domain name server retrieves corresponding IP address web server  web browser connects web server sends HTTP request  via protocol stack  desired web page  web server receives request checks desired page  page exists  web server sends  server cannot find requested page  will send HTTP     error message       means  Page Not Found  anyone surfed web probably knows   web browser receives page back connection closed  browser parses page looks page elements needs complete web page  usually include images  applets  etc  element needed  browser makes additional connections HTTP requests server element  When browser finished loading images  applets  etc  page will completely loaded browser window  Check   Use Telnet Client Retrieve Web Page Using HTTP Telnet remote terminal service used Internet  s use declined lately  useful tool study Internet  Windows find default telnet program  may located Windows directory named telnet exe  When opened  pull down Terminal menu select Preferences  preferences window  check Local Echo   so HTTP request when type   pull down Connection menu select Remote System  Enter www google com Host Name    Port   Web servers usually listen port    default   Press Connect  type   HTTP      press Enter twice  simple HTTP request web server s root page  web page flash dialog box pop tell connection lost  d save retrieved page  turn logging Telnet program  may browse web page HTML used write    Internet protocols specified Internet documents known Request Comments RFCs  RFCs may found several locations Internet  Resources section below appropriate URL s  HTTP version     specified RFC       Application Protocols  SMTP Electronic Mail  commonly used Internet service electronic mail  E mail uses application level protocol called Simple Mail Transfer Protocol SMTP  SMTP text based protocol  unlike HTTP  SMTP connection oriented  SMTP complicated HTTP  commands considerations SMTP HTTP  When open mail client read e mail  typically happens   mail client  Netscape Mail  Lotus Notes  Microsoft Outlook  etc   opens connection s default mail server  mail server s IP address domain name typically setup when mail client installed  mail server will always transmit first message identify itself  client will send SMTP HELO command server will respond     OK message  Depending whether client checking mail  sending mail  etc  appropriate SMTP commands will sent server  will respond accordingly  request response transaction will continue until client sends SMTP QUIT command  server will say goodbye connection will closed  simple  conversation  SMTP client SMTP server shown below  R  denotes messages sent server  receiver  S  denotes messages sent client  sender         SMTP example shows mail sent Smith host USC ISIF        Jones  Green  Brown host BBN UNIX   assume       host USC ISIF contacts host BBN UNIX directly   mail       accepted Jones Brown   Green does not mailbox       host BBN UNIX                                                                                R      BBN UNIX ARPA Simple Mail Transfer Service Ready          S  HELO USC ISIF ARPA          R      BBN UNIX ARPA           S  MAIL  Smith USC ISIF ARPA           R      OK           S  RCPT  Jones BBN UNIX ARPA           R      OK           S  RCPT  Green BBN UNIX ARPA           R      No user           S  RCPT  Brown BBN UNIX ARPA           R      OK           S  DATA          R      Start mail input  end  CRLF   CRLF           S  Blah blah blah             S     etc  etc  etc           S             R      OK           S  QUIT          R      BBN UNIX ARPA Service closing transmission channel SMTP transaction taken RFC      specifies SMTP  Transmission Control Protocol application layer protocol stack TCP layer  When applications open connection computer Internet  messages send  using specific application layer protocol  passed down stack TCP layer  TCP responsible routing application protocols correct application destination computer  accomplish  port numbers used  Ports thought seperate channels computer  example  surf web reading e mail  two applications  web browser mail client  used different port numbers  When packet arrives computer makes its protocol stack  TCP layer decides application receives packet based port number  TCP works  When TCP layer receives application layer protocol data above  segments manageable  chunks  adds TCP header specific TCP information  chunk   information contained TCP header includes port number application data needs sent  When TCP layer receives packet IP layer below  TCP layer strips TCP header data packet  does data reconstruction necessary  sends data correct application using port number taken TCP header  TCP routes data moving protocol stack correct application  TCP not textual protocol  TCP connection oriented  reliable  byte stream service  Connection oriented means two applications using TCP first establish connection exchanging data  TCP reliable packet received  acknowledgement sent sender confirm delivery  TCP includes checksum s header error checking received data  TCP header looks   Notice no place IP address TCP header  TCP doesn t know anything IP addresses  TCP s job application level data application application reliably  task getting data computer computer job IP  Check   Known Internet Port Numbers Listed below port numbers commonly used Internet services  FTP       Telnet    SMTP    HTTP    Quake III Arena       Internet Protocol Unlike TCP  IP unreliable  connectionless protocol  IP doesn t care whether packet gets s destination not  Nor does IP know connections port numbers  IP s job send route packets computers  IP packets independent entities may arrive order not  TCP s job sure packets arrive correct order  thing IP common TCP receives data adds s own IP header information TCP data  IP header looks   Above IP addresses sending receiving computers IP header  Below packet looks passing application layer  TCP layer  IP layer  application layer data segmented TCP layer  TCP header added  packet continues IP layer  IP header added  packet transmitted across Internet 